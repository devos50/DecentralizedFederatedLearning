plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.10'
}

application {
    mainClass = 'nl.tudelft.dfl.ApplicationKt'
}

group = 'me.martijndevos'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.github.microutils:kotlin-logging-jvm:2.0.10'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0-M1-1.4.0-rc"

    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    def dl4j_version = "1.0.0-M1"

    implementation (group: "org.nd4j", name: "nd4j-native", version: dl4j_version) {
        exclude group: "net.java.dev.jna", module: "jna"
    }
    implementation (group: "org.nd4j", name: "nd4j-native", version: dl4j_version, classifier: "macosx-x86_64") {
        exclude group: "net.java.dev.jna", module: "jna"
    }
    implementation (group: "org.deeplearning4j", name: "deeplearning4j-core", version: dl4j_version) {
        exclude group: "org.bytedeco", module: "leptonica-platform"
        exclude group: "net.java.dev.jna", module: "jna"
        exclude group: "com.google.guava", module: "guava"
    }
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

task uberJar(type: Jar) {
    archiveClassifier = 'uber'
    duplicatesStrategy = 'include'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}